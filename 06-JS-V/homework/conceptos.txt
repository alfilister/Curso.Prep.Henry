El concepto de Prototype es como un almacen adjunto a cada objeto de Javascript, si bien al momento de crear un objeto se le asignan algunos parametros, los objetos siempre han contado con propiedades "pre existentes", por ejemplo el .push, .pop, .length, entre muchas otras, ya que estas propiedades como tal no han sido definidas como propiedades en el objeto cuando lo creamos, la respuesta a su uso se encuentra en el Prototype, que funcionando como almacen adjunto puede contener estas funciones "nativas" y así mismo permite ingresar nuevos parametros o métodos para ser usados en los objetos que se creen bajo un constructor común.

Los constructores de clase o también llamados fuctions constructor, hacen un molde de objeto, que una vez configurado podrá crear objetos con las propiedades y los métodos deseados; en su sintaxis y por acuerdo de la comunidad, después de escribir function el nombre como tal del constructor tendrá la primera letra en mayuscula, lo que le permite a los demás miembros de la comunidad al leer el código saber que se encuentran leyendo/ejecutando una function constructor; en el interio de la misma se usará el keyword this, ya que este hará referencia al nombre de objeto indicado en sus posteriores y variadas creaciones.

una vez creado el function constructor se usa mediante el keyword new, con la sintaxis var elementoAcrear = new NombreDelConstructorFunctionConLaPrimeraLetraEnMayuscula (argumento1, argumento2, argumentoN);

De esta forma el keyword new creará un objeto vacío y posteriormente aplicará internamente el metodo .bind para añadir los parametros establecidos en el function constructor.
